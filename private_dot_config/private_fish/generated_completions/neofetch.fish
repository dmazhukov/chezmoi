complete -c neofetch -l disable -d 'infoname          Allows you to disable an info line from appearing'
complete -c neofetch -l package_managers -d 'on/off   Hide/Show Package Manager names . (tiny, on, off)'
complete -c neofetch -l os_arch -d 'on/off            Hide/Show OS architecture.'
complete -c neofetch -l speed_type -d 'type           Change the type of cpu speed to display.'
complete -c neofetch -l speed_shorthand -d 'on/off    Whether or not to show decimals in CPU speed.'
complete -c neofetch -l cpu_brand -d 'on/off          Enable/Disable CPU brand in output.'
complete -c neofetch -l cpu_cores -d 'type            Whether or not to display the number of CPU cores'
complete -c neofetch -l cpu_speed -d 'on/off          Hide/Show cpu speed.'
complete -c neofetch -l cpu_temp -d 'C/F/off          Hide/Show cpu temperature.'
complete -c neofetch -l distro_shorthand -d 'on/off   Shorten the output of distro (tiny, on, off)'
complete -c neofetch -l kernel_shorthand -d 'on/off   Shorten the output of kernel'
complete -c neofetch -l uptime_shorthand -d 'on/off   Shorten the output of uptime (tiny, on, off)'
complete -c neofetch -l refresh_rate -d 'on/off       Whether to display the refresh rate of each monitor'
complete -c neofetch -l gpu_brand -d 'on/off          Enable/Disable GPU brand in output. (AMD/NVIDIA/Intel)'
complete -c neofetch -l gpu_type -d 'type             Which GPU to display. (all, dedicated, integrated)'
complete -c neofetch -l gtk_shorthand -d 'on/off      Shorten output of gtk theme/icons'
complete -c neofetch -l gtk2 -d 'on/off               Enable/Disable gtk2 theme/font/icons output'
complete -c neofetch -l gtk3 -d 'on/off               Enable/Disable gtk3 theme/font/icons output'
complete -c neofetch -l shell_path -d 'on/off         Enable/Disable showing $SHELL path'
complete -c neofetch -l shell_version -d 'on/off      Enable/Disable showing $SHELL version'
complete -c neofetch -l disk_show -d 'value           Which disks to display.'
complete -c neofetch -l disk_subtitle -d 'type        What information to append to the Disk subtitle.'
complete -c neofetch -l ip_host -d 'url               URL to query for public IP'
complete -c neofetch -l ip_timeout -d 'int            Public IP timeout (in seconds).'
complete -c neofetch -l song_format -d 'format        Print the song data in a specific format (see config file).'
complete -c neofetch -l song_shorthand -d 'on/off     Print the Artist/Album/Title on separate lines.'
complete -c neofetch -l memory_percent -d 'on/off     Display memory percentage.'
complete -c neofetch -l music_player -d 'player-name  Manually specify a player to use.'
complete -c neofetch -l colors -d 'x x x x x x        Changes the text colors in this order:'
complete -c neofetch -l underline -d 'on/off          Enable/Disable the underline.'
complete -c neofetch -l underline_char -d 'char       Character to use when underlining title'
complete -c neofetch -l bold -d 'on/off               Enable/Disable bold text'
complete -c neofetch -l separator -d string\ \ \ \ \ \ \ \ \ \ Changes\ the\ default\ \':\'\ separator\ to\ the\ specified\ string.
complete -c neofetch -l color_blocks -d 'on/off       Enable/Disable the color blocks'
complete -c neofetch -l block_width -d 'num           Width of color blocks in spaces'
complete -c neofetch -l block_height -d 'num          Height of color blocks in lines'
complete -c neofetch -l block_range -d 'num num       Range of colors to print as blocks'
complete -c neofetch -l bar_char -d \'elapsed\ char\'\ \'total\ char\'
complete -c neofetch -l bar_border -d on/off\ \ \ \ \ \ \ \ \ Whether\ or\ not\ to\ surround\ the\ bar\ with\ \'\[\]\'
complete -c neofetch -l bar_length -d 'num            Length in spaces to make the bars.'
complete -c neofetch -l bar_colors -d 'num num        Colors to make the bar.'
complete -c neofetch -l cpu_display -d 'mode          Bar mode.'
complete -c neofetch -l memory_display -d 'mode       Bar mode.'
complete -c neofetch -l battery_display -d 'mode      Bar mode.'
complete -c neofetch -l disk_display -d 'mode         Bar mode.'
complete -c neofetch -l backend -d 'backend           Which image backend to use.'
complete -c neofetch -l source -d 'source             Which image or ascii file to use.'
complete -c neofetch -l ascii -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'ascii\'\ backend.
complete -c neofetch -l caca -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'caca\'\ backend.
complete -c neofetch -l chafa -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'chafa\'\ backend.
complete -c neofetch -l iterm2 -d source\ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'iterm2\'\ backend.
complete -c neofetch -l jp2a -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'jp2a\'\ backend.
complete -c neofetch -l kitty -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'kitty\'\ backend.
complete -c neofetch -l pixterm -d source\ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'pixterm\'\ backend.
complete -c neofetch -l sixel -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'sixel\'\ backend.
complete -c neofetch -l termpix -d source\ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'termpix\'\ backend.
complete -c neofetch -l tycat -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'tycat\'\ backend.
complete -c neofetch -l w3m -d source\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Shortcut\ to\ use\ \'w3m\'\ backend.
complete -c neofetch -l off -d Shortcut\ to\ use\ \'off\'\ backend\ \(Disable\ ascii\ art\).
complete -c neofetch -l ascii_colors -d 'x x x x x x  Colors to print the ascii art'
complete -c neofetch -l ascii_distro -d distro\ \ \ \ \ \ \ Which\ Distro\'s\ ascii\ art\ to\ print
complete -c neofetch -l ascii_bold -d 'on/off         Whether or not to bold the ascii logo.'
complete -c neofetch -s L -l logo -d 'Hide the info text and only show the ascii logo.'
complete -c neofetch -l loop -d 'Redraw the image constantly until Ctrl+C is used. This fixes issues'
complete -c neofetch -l size -d '00px | --size 00%    How to size the image.'
complete -c neofetch -l crop_mode -d 'mode            Which crop mode to use'
complete -c neofetch -l crop_offset -d 'value         Change the crop offset for normal mode.'
complete -c neofetch -l xoffset -d 'px                How close the image will be to the left edge of the'
complete -c neofetch -l yoffset -d 'px                How close the image will be to the top edge of the'
complete -c neofetch -l bg_color -d 'color            Background color to display behind transparent image.'
complete -c neofetch -l gap -d 'num                   Gap between image and text.'
complete -c neofetch -l clean -d 'Delete cached files and thumbnails.'
complete -c neofetch -l config -d '/path/to/config    Specify a path to a custom config file'
complete -c neofetch -l config -d 'none               Launch the script without a config file'
complete -c neofetch -l print_config -d 'Print the default config file to stdout.'
complete -c neofetch -l stdout -d 'Turn off all colors and disables any ASCII/image backend.'
complete -c neofetch -l help -d 'Print this text and exit'
complete -c neofetch -n __fish_no_arguments -l version -d 'Show neofetch version'
complete -c neofetch -s v -d 'Display error messages.'
complete -c neofetch -s vv -d 'Display a verbose log for error reporting.'
complete -c neofetch -l gen-man -d 'Generate a manpage for Neofetch in your PWD. (Requires GNU help2man)'
