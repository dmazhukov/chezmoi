complete -f -c kubectl -n __fish_use_subcommand -a create -d 'Create a resource from a file or from stdin.'
complete -f -c kubectl -n __fish_use_subcommand -a expose -d 'Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service'
complete -f -c kubectl -n __fish_use_subcommand -a run -d 'Run a particular image on the cluster'
complete -f -c kubectl -n __fish_use_subcommand -a set -d 'Set specific features on objects'
complete -f -c kubectl -n __fish_use_subcommand -a explain -d 'Documentation of resources'
complete -f -c kubectl -n __fish_use_subcommand -a get -d 'Display one or many resources'
complete -f -c kubectl -n __fish_use_subcommand -a edit -d 'Edit a resource on the server'
complete -f -c kubectl -n __fish_use_subcommand -a delete -d 'Delete resources by filenames, stdin, resources and names, or by resources and label selector'
complete -f -c kubectl -n __fish_use_subcommand -a rollout -d 'Manage the rollout of a resource'
complete -f -c kubectl -n __fish_use_subcommand -a scale -d 'Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job'
complete -f -c kubectl -n __fish_use_subcommand -a autoscale -d 'Auto-scale a Deployment, ReplicaSet, or ReplicationController'
complete -f -c kubectl -n __fish_use_subcommand -a certificate -d 'Modify certificate resources.'
complete -f -c kubectl -n __fish_use_subcommand -a cluster-info -d 'Display cluster info'
complete -f -c kubectl -n __fish_use_subcommand -a top -d 'Display Resource (CPU/Memory/Storage) usage.'
complete -f -c kubectl -n __fish_use_subcommand -a cordon -d 'Mark node as unschedulable'
complete -f -c kubectl -n __fish_use_subcommand -a uncordon -d 'Mark node as schedulable'
complete -f -c kubectl -n __fish_use_subcommand -a drain -d 'Drain node in preparation for maintenance'
complete -f -c kubectl -n __fish_use_subcommand -a taint -d 'Update the taints on one or more nodes'
complete -f -c kubectl -n __fish_use_subcommand -a describe -d 'Show details of a specific resource or group of resources'
complete -f -c kubectl -n __fish_use_subcommand -a logs -d 'Print the logs for a container in a pod'
complete -f -c kubectl -n __fish_use_subcommand -a attach -d 'Attach to a running container'
complete -f -c kubectl -n __fish_use_subcommand -a port-forward -d 'Forward one or more local ports to a pod'
complete -f -c kubectl -n __fish_use_subcommand -a proxy -d 'Run a proxy to the Kubernetes API server'
complete -f -c kubectl -n __fish_use_subcommand -a cp -d 'Copy files and directories to and from containers.'
complete -f -c kubectl -n __fish_use_subcommand -a auth -d 'Inspect authorization'
complete -f -c kubectl -n __fish_use_subcommand -a diff -d 'Diff live version against would-be applied version'
complete -f -c kubectl -n __fish_use_subcommand -a apply -d 'Apply a configuration to a resource by filename or stdin'
complete -f -c kubectl -n __fish_use_subcommand -a patch -d 'Update field(s) of a resource using strategic merge patch'
complete -f -c kubectl -n __fish_use_subcommand -a replace -d 'Replace a resource by filename or stdin'
complete -f -c kubectl -n __fish_use_subcommand -a wait -d 'Experimental: Wait for a specific condition on one or many resources.'
complete -f -c kubectl -n __fish_use_subcommand -a convert -d 'Convert config files between different API versions'
complete -f -c kubectl -n __fish_use_subcommand -a kustomize -d 'Build a kustomization target from a directory or a remote url.'
complete -f -c kubectl -n __fish_use_subcommand -a label -d 'Update the labels on a resource'
complete -f -c kubectl -n __fish_use_subcommand -a annotate -d 'Update the annotations on a resource'
complete -f -c kubectl -n __fish_use_subcommand -a completion -d 'Output shell completion code for the specified shell (bash or zsh)'
complete -f -c kubectl -n __fish_use_subcommand -a api-resources -d 'Print the supported API resources on the server'
complete -f -c kubectl -n __fish_use_subcommand -a api-versions -d 'Print the supported API versions on the server, in the form of "group/version"'
complete -f -c kubectl -n __fish_use_subcommand -a config -d 'Modify kubeconfig files'
complete -f -c kubectl -n __fish_use_subcommand -a plugin -d 'Provides utilities for interacting with plugins.'
complete -f -c kubectl -n __fish_use_subcommand -a version -d 'Print the client and server version information'
