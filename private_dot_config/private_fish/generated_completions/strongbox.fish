complete -f -c strongbox -n __fish_use_subcommand -a transit -d 'perform actions on transit key/backend'
complete -c strongbox -n '__fish_seen_subcommand_from transit' -s h -l help -d 'show help'
complete -f -c strongbox -n __fish_use_subcommand -a secret -d 'perform actions on secrets (locally)'
complete -c strongbox -n '__fish_seen_subcommand_from secret' -s h -l help -d 'show help'
complete -f -c strongbox -n __fish_use_subcommand -a get-secret-path -d 'display the currently used vault secret path in the statefile'
complete -f -c strongbox -n __fish_use_subcommand -a set-secret-path -d 'update the vault secret path in the statefile'
complete -f -c strongbox -n __fish_use_subcommand -a init -d 'Create a empty state file at configured location'
complete -f -c strongbox -n __fish_use_subcommand -a status -d 'display current status'
complete -f -c strongbox -n __fish_use_subcommand -a plan -d 'compare local version with vault cluster'
complete -f -c strongbox -n __fish_use_subcommand -a apply -d 'synchronize vault managed secrets'
complete -f -c strongbox -n __fish_use_subcommand -a help -d 'Shows a list of commands or help for one command'
complete -c strongbox -l state -d 'FILE, -s FILE    load state from FILE (default: ".strongbox_state.yml") [$STRONGBOX_STATE]'
complete -c strongbox -l vault-addr -d 'value       vault endpoint [$VAULT_ADDR]'
complete -c strongbox -l vault-token -d 'value      vault token [$VAULT_TOKEN]'
complete -c strongbox -l vault-role-id -d 'value    vault role id [$VAULT_ROLE_ID]'
complete -c strongbox -l vault-secret-id -d 'value  vault secret id [$VAULT_SECRET_ID]'
complete -c strongbox -l log-level -d 'value        log level (debug,info,warn,fatal,panic) (default: "info") [$STRONGBOX_LOG_LEVEL]'
complete -c strongbox -l log-format -d 'value       log format (json,text) (default: "text") [$STRONGBOX_LOG_FORMAT]'
complete -c strongbox -s h -l help -d 'show help'
complete -c strongbox -n __fish_no_arguments -s v -l version -d 'print the version'
