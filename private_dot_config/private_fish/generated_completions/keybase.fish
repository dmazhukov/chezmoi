complete -f -c keybase -n __fish_use_subcommand -a account -d 'Modify your account'
complete -f -c keybase -n __fish_use_subcommand -a blocks -d 'Manage user and team blocks'
complete -f -c keybase -n __fish_use_subcommand -a bot -d 'Manage bot accounts'
complete -f -c keybase -n __fish_use_subcommand -a chat -d 'Chat securely with keybase users'
complete -f -c keybase -n __fish_use_subcommand -a ctl -d 'Control the background keybase service'
complete -f -c keybase -n __fish_use_subcommand -a currency -d 'Manage cryptocurrency addresses'
complete -f -c keybase -n __fish_use_subcommand -a decrypt -d 'Decrypt messages or files for keybase users'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -s i -l infile -d 'Specify an input file.'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -s m -l message -d 'Provide the message on the command line.'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -s o -l outfile -d 'Specify an outfile (stdout by default).'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -l interactive -d 'Interactive prompt for decryption after sender verification'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -s f -l force -d 'Force unprompted decryption, even on an identify failure'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -l paperkey -d 'Use a paper key for decryption'
complete -c keybase -n '__fish_seen_subcommand_from decrypt' -l encryptor-outfile -d 'Write the Keybase name of the encryptor to this file'
complete -f -c keybase -n __fish_use_subcommand -a deprovision -d 'Revoke the current device, log out, and delete local state.'
complete -f -c keybase -n __fish_use_subcommand -a device -d 'Manage your devices'
complete -f -c keybase -n __fish_use_subcommand -a encrypt -d 'Encrypt messages or files for keybase users and teams'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l team -d '[--team option --team option] Encrypt for a team. Can be specified multiple times.'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -s b -l binary -d 'Output in binary (rather than ASCII/armored).'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -s i -l infile -d 'Specify an input file.'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -s m -l message -d 'Provide the message on the command line.'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -s o -l outfile -d 'Specify an outfile (stdout by default).'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l no-entity-keys -d 'Do not use per user/per team keys for encryption.'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l no-device-keys -d 'Do not use the device keys of all the user recipients'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l no-paper-keys -d 'Do not use the paper keys of all the user recipients'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l no-self-encrypt -d Don\'t\ encrypt\ for\ yourself.
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l auth-type -d '"signed"   How to guarantee sender authenticity:'
complete -c keybase -n '__fish_seen_subcommand_from encrypt' -l saltpack-version -d '"0"  Force a specific saltpack version'
complete -f -c keybase -n __fish_use_subcommand -a follow -d track\ Verify\ a\ user\'s\ authenticity\ and\ optionally\ follow\ them
complete -c keybase -n '__fish_seen_subcommand_from follow' -s l -l local -d Only\ follow\ locally,\ don\'t\ send\ a\ public\ statement\ to\ the\ server.
complete -c keybase -n '__fish_seen_subcommand_from follow' -s y -d 'Approve remote following without prompting.'
complete -c keybase -n '__fish_seen_subcommand_from follow' -s s -l skip-proof-cache -d 'Skip cached proofs, force re-check'
complete -f -c keybase -n __fish_use_subcommand -a fs -d 'Perform filesystem operations'
complete -f -c keybase -n __fish_use_subcommand -a git -d 'Manage git repos'
complete -f -c keybase -n __fish_use_subcommand -a id -d 'Identify a user and check their signature chain'
complete -c keybase -n '__fish_seen_subcommand_from id' -s j -l json -d 'Output requests as JSON'
complete -c keybase -n '__fish_seen_subcommand_from id' -s s -l skip-proof-cache -d 'Skip cached proofs, force re-check'
complete -f -c keybase -n __fish_use_subcommand -a list-followers -d 'List those who follow you'
complete -c keybase -n '__fish_seen_subcommand_from list-followers' -s v -l verbose -d 'A full dump, with more gory details.'
complete -f -c keybase -n __fish_use_subcommand -a list-following -d 'List who you or the given user is publicly following'
complete -c keybase -n '__fish_seen_subcommand_from list-following' -s f -l filter -d 'Provide a regex filter.'
complete -c keybase -n '__fish_seen_subcommand_from list-following' -s H -l headers -d 'Show column headers.'
complete -c keybase -n '__fish_seen_subcommand_from list-following' -s j -l json -d 'Output as JSON (default is text).'
complete -c keybase -n '__fish_seen_subcommand_from list-following' -s v -l verbose -d 'A full dump, with more gory details.'
complete -f -c keybase -n __fish_use_subcommand -a log -d 'Manage keybase logs'
complete -f -c keybase -n __fish_use_subcommand -a login -d 'Establish a session with the keybase server'
complete -c keybase -n '__fish_seen_subcommand_from login' -s s -l switch -d 'switch out the current user for another'
complete -c keybase -n '__fish_seen_subcommand_from login' -l paperkey -d 'DANGEROUS: automatically provision using this paper key'
complete -c keybase -n '__fish_seen_subcommand_from login' -l devicename -d 'Device name used in automated provisioning'
complete -f -c keybase -n __fish_use_subcommand -a logout -d 'Logout and remove session information'
complete -c keybase -n '__fish_seen_subcommand_from logout' -s f -l force -d 'If there are any reasons not to logout right now, ignore them (potentially dangerous)'
complete -f -c keybase -n __fish_use_subcommand -a oneshot -d 'Establish a oneshot device, as in logging into keybase from a disposable docker'
complete -c keybase -n '__fish_seen_subcommand_from oneshot' -l paperkey -d 'DANGEROUS: specify a paper key (or try the KEYBASE_PAPERKEY environment variable)'
complete -c keybase -n '__fish_seen_subcommand_from oneshot' -s u -l username -d 'specify a username (or try the KEYBASE_USERNAME environment variable)'
complete -f -c keybase -n __fish_use_subcommand -a paperkey -d 'Generate paper keys for recovering your account'
complete -f -c keybase -n __fish_use_subcommand -a passphrase -d 'Change or recover your keybase passphrase'
complete -f -c keybase -n __fish_use_subcommand -a pgp -d 'Manage keybase PGP keys'
complete -f -c keybase -n __fish_use_subcommand -a ping -d 'Ping the keybase API server'
complete -c keybase -n '__fish_seen_subcommand_from ping' -l gregor -d 'ping the Gregor server'
complete -f -c keybase -n __fish_use_subcommand -a prove -d 'Generate a new proof'
complete -c keybase -n '__fish_seen_subcommand_from prove' -s o -l output -d 'Output proof text to a file (rather than standard out).'
complete -c keybase -n '__fish_seen_subcommand_from prove' -s f -l force -d Don\'t\ prompt.
complete -c keybase -n '__fish_seen_subcommand_from prove' -s l -l list-services -d 'List some available services'
complete -c keybase -n '__fish_seen_subcommand_from prove' -s a -l all -d 'List the full gamut of available services'
complete -f -c keybase -n __fish_use_subcommand -a rekey -d 'Rekey status and actions'
complete -f -c keybase -n __fish_use_subcommand -a selfprovision -d 'Provision a new device if the current device is a clone.'
complete -f -c keybase -n __fish_use_subcommand -a sign -d 'Sign a document'
complete -c keybase -n '__fish_seen_subcommand_from sign' -s b -l binary -d 'Output binary message (default is armored).'
complete -c keybase -n '__fish_seen_subcommand_from sign' -s d -l detached -d 'Detached signature (default is attached).'
complete -c keybase -n '__fish_seen_subcommand_from sign' -s i -l infile -d 'Specify an input file.'
complete -c keybase -n '__fish_seen_subcommand_from sign' -s m -l message -d 'Provide the message to sign on the command line.'
complete -c keybase -n '__fish_seen_subcommand_from sign' -s o -l outfile -d 'Specify an outfile (default is STDOUT).'
complete -c keybase -n '__fish_seen_subcommand_from sign' -l saltpack-version -d '"0" Force a specific saltpack version'
complete -f -c keybase -n __fish_use_subcommand -a signup -d 'Signup for a new account'
complete -c keybase -n '__fish_seen_subcommand_from signup' -s c -l invite-code -d 'Specify an invite code.'
complete -c keybase -n '__fish_seen_subcommand_from signup' -l email -d 'Specify an account email.'
complete -c keybase -n '__fish_seen_subcommand_from signup' -l username -d 'Specify a username.'
complete -c keybase -n '__fish_seen_subcommand_from signup' -l no-email -d 'Do not signup with email.'
complete -c keybase -n '__fish_seen_subcommand_from signup' -l set-password -d 'Ask for password (optional by default).'
complete -c keybase -n '__fish_seen_subcommand_from signup' -l force -d '(dangerous) Ignore any reasons not to signup right now'
complete -f -c keybase -n __fish_use_subcommand -a sigs -d 'Manage signatures'
complete -f -c keybase -n __fish_use_subcommand -a status -d 'Show information about current user'
complete -c keybase -n '__fish_seen_subcommand_from status' -s j -l json -d 'Output status as JSON'
complete -f -c keybase -n __fish_use_subcommand -a team -d 'Manage teams'
complete -f -c keybase -n __fish_use_subcommand -a unfollow -d 'untrack Unfollow a user'
complete -f -c keybase -n __fish_use_subcommand -a update -d 'The updater'
complete -f -c keybase -n __fish_use_subcommand -a verify -d 'Verify message or file signatures for keybase users'
complete -c keybase -n '__fish_seen_subcommand_from verify' -s d -l detached -d 'Specify a detached signature file.'
complete -c keybase -n '__fish_seen_subcommand_from verify' -s i -l infile -d 'Specify an input file.'
complete -c keybase -n '__fish_seen_subcommand_from verify' -s m -l message -d 'Provide the message to verify on the command line.'
complete -c keybase -n '__fish_seen_subcommand_from verify' -l no-output -d Don\'t\ output\ the\ verified\ message.
complete -c keybase -n '__fish_seen_subcommand_from verify' -s o -l outfile -d 'Specify an outfile (stdout by default).'
complete -c keybase -n '__fish_seen_subcommand_from verify' -s S -l signed-by -d 'Assert signed by the given user (can use user assertion format).'
complete -c keybase -n '__fish_seen_subcommand_from verify' -s f -l force -d Output\ the\ verified\ message\ even\ if\ the\ sender\'s\ identity\ can\'t\ be\ verified
complete -f -c keybase -n __fish_use_subcommand -a version -d 'Print out version and build information'
complete -c keybase -n '__fish_seen_subcommand_from version' -s f -l format -d Alternate\ format\ for\ version\ output.\ Specify\ \'s\'\ for\ simple\ \(1.2.3\)\ or\ \'v\'\ for\ verbose.\ Default\ \(blank\)\ includes\ build\ number\ \(1.2.3-400\).
complete -c keybase -n '__fish_seen_subcommand_from version' -s S -l no-service -d Don\'t\ report\ on\ the\ service\'s\ build\ information
complete -f -c keybase -n __fish_use_subcommand -a wallet -d 'Send and receive Stellar XLM'
complete -f -c keybase -n __fish_use_subcommand -a service -d 'start the Keybase service to power all other CLI options'
complete -c keybase -n '__fish_seen_subcommand_from service' -l chdir -d 'Specify where to run as a daemon (via chdir)'
complete -c keybase -n '__fish_seen_subcommand_from service' -l label -d 'Specifying a label can help identify services.'
complete -c keybase -n '__fish_seen_subcommand_from service' -l auto-forked -d 'Specify if this binary was auto-forked from the client'
complete -c keybase -n '__fish_seen_subcommand_from service' -l watchdog-forked -d 'Specify if this binary was started by the watchdog'
complete -c keybase -n '__fish_seen_subcommand_from service' -s u -l oneshot-username -d 'In oneshot mode, startup with username'
complete -c keybase -n '__fish_seen_subcommand_from service' -s p -l oneshot-paperkey -d 'In oneshot mode, startup with paperkey; DANGEROUS to pass paperkey as a parameter'
complete -f -c keybase -n __fish_use_subcommand -a help -d 'Shows a list of commands or help for one command'
