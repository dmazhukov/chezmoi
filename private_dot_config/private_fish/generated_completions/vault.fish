complete -f -c vault -n __fish_use_subcommand -a read -d 'Read data and retrieves secrets'
complete -c vault -n '__fish_seen_subcommand_from read' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a write -d 'Write data, configuration, and secrets'
complete -c vault -n '__fish_seen_subcommand_from write' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a delete -d 'Delete secrets and configuration'
complete -c vault -n '__fish_seen_subcommand_from delete' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a list -d 'List data or secrets'
complete -c vault -n '__fish_seen_subcommand_from list' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a login -d 'Authenticate locally'
complete -c vault -n '__fish_seen_subcommand_from login' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a agent -d 'Start a Vault agent'
complete -c vault -n '__fish_seen_subcommand_from agent' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a server -d 'Start a Vault server'
complete -c vault -n '__fish_seen_subcommand_from server' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a status -d 'Print seal and HA status'
complete -c vault -n '__fish_seen_subcommand_from status' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a unwrap -d 'Unwrap a wrapped secret'
complete -c vault -n '__fish_seen_subcommand_from unwrap' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a audit -d 'Interact with audit devices'
complete -f -c vault -n __fish_use_subcommand -a auth -d 'Interact with auth methods'
complete -f -c vault -n __fish_use_subcommand -a kv -d Interact\ with\ Vault\'s\ Key-Value\ storage
complete -f -c vault -n __fish_use_subcommand -a lease -d 'Interact with leases'
complete -f -c vault -n __fish_use_subcommand -a namespace -d 'Interact with namespaces'
complete -f -c vault -n __fish_use_subcommand -a operator -d 'Perform operator-specific tasks'
complete -f -c vault -n __fish_use_subcommand -a path-help -d 'Retrieve API help for paths'
complete -c vault -n '__fish_seen_subcommand_from path-help' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a plugin -d 'Interact with Vault plugins and catalog'
complete -f -c vault -n __fish_use_subcommand -a policy -d 'Interact with policies'
complete -f -c vault -n __fish_use_subcommand -a print -d 'Prints runtime configurations'
complete -f -c vault -n __fish_use_subcommand -a secrets -d 'Interact with secrets engines'
complete -f -c vault -n __fish_use_subcommand -a ssh -d 'Initiate an SSH session'
complete -c vault -n '__fish_seen_subcommand_from ssh' -s client-key -d 'is also required. This can also be specified via the'
complete -f -c vault -n __fish_use_subcommand -a token -d 'Interact with tokens'
